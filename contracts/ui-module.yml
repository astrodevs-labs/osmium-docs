asyncapi: '2.6.0'
info:
  title: UI Module
  version: '1.0.0'
  description: |
    Description ahah
  contact:
    name: Contact Name
    email: email@company.com

servers:
  production:
    url: ui.prod
    protocol: cpp
    description: server description
  dev:
    url: ui.dev
    protocol: cpp
    description: server description

defaultContentType: application/json

channels:
  # Has it to be different than a component state event ? 
  ComponentTreeUpdate:
    description: Events about modifying current component tree.
    subscribe:
      summary: Component Added or Deleted
      operationId: treeUpdate
      message:
        $ref: 'components/component-update.yml'

  NewScaffoldEvent:
    description: Events about resetting the component tree.
    publish:
      summary: Sending new scaffold
      operationId: newScaffold
      message:
        $ref: 'components/new-scaffold.yml'

  FrontStateEvent:
    description: Events from the front end user (See front-module).
    subscribe:
      summary: A state changed from the client input.
      operationId: stateEvent
      message:
        $ref: 'components/state-event.yml'
  
  FrontConnectedEvent:
    description: Events on connection with front-end (See front-module).
    subscribe:
      summary: A payload containing the connection information (here used to trigger first scaffold building)
      operationId: frontConnectedEvent
      message:
        $ref: 'components/connection.yml'

  FrontTreeUpdate:
    description: Events to send to front when tree changed (See front-module).
    publish:
      summary: Sending Event to Front
      operationId: treeUpdateEvent
      message:
        $ref: 'components/new-layout.yml'
  
  FrontScaffoldUpdate:
    description: Events to send to front when a new scaffold has to be rendered (See front-module).
    publish:
      summary: Sending scaffold to Front
      operationId: scaffoldEvent
      message:
        $ref: 'components/new-scaffold.yml'